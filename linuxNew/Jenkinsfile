pipeline {
    agent none
    tools {
        jdk "JDK11"
    }
    stages {
        stage('Linux Installers') {
            matrix {
                agent {
                    label "dockerBuild&&linux&&x64" // Dynamic docker machines from Azure
                }
                axes {
                    axis {
                        name 'VERSION'
                        values '8', '11', '17'
                    }
                    axis {
                        name 'PLATFORM'
                        values 'x64', 'aarch64', 'ppc64le', 's390x', 'arm32'
                    }
                }
                // We don't produce an s390x binary for JDK8
                excludes {
                    exclude {
                        axis {
                            name 'VERSION'
                            values '8'
                        }
                        axis {
                            name 'PLATFORM'
                            values 's390x'
                        }
                    }
                }
                stages {
                    stage('Build Installer') {
                        steps {
                            echo "Installer Job for Temurin ${VERSION} - ${PLATFORM}"
                            setup()
                            dir('linuxNew') {
                                buildAndTest()
                            }
                            uploadArtifacts()
                        }
                    }
                }
            }
        }
    }
}

def setup() {
    cleanWs()
    if (PLATFORM != "x64") {
        env.TESTCONTAINERS_RYUK_DISABLED=true
        env.TESTCONTAINERS_CHECKS_DISABLE=true
    }
    env._JAVA_OPTIONS="-Xmx4g"
    checkout scm
}

def buildAndTest() {
    switch(JDK_SOURCE) {
        case "upstream":
            break;
        case "customized":
            break;
        default: //Adoptium API 
            break;
    }
    sh("./gradlew --parallel check -PPRODUCT=${PRODUCT} -PPRODUCT_VERSION=${VERSION}")
    archiveArtifacts artifacts: '**/*/build/ospackage/*,**/*/build/reports/**'
}

def uploadArtifacts() {
    echo "tests"
}
